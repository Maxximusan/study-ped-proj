{"version":3,"file":"static/js/913.7de70138.chunk.js","mappings":"qOAEaA,EAAOC,EAAAA,GAAOC,KAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0BAGlBC,EAAQJ,EAAAA,GAAOK,MAAKC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oF,UC0FjC,EAxFqB,WACnB,IAAMI,GAAWC,EAAAA,EAAAA,MACjBC,GAAgEC,EAAAA,EAAAA,MAAzDC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAKJ,EAALI,MAAqBC,EAAML,EAAnBM,UAAaD,OA6BlD,OAEIE,EAAAA,EAAAA,MAACC,EAAO,CAACC,SAAUN,GA7BF,SAACO,GAatBC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAMG,MAChBF,QAAQC,IAAIF,EAAMI,OAClBH,QAAQC,IAAIF,EAAMK,UAElBjB,GAASkB,EAAAA,EAAAA,IAAU,CACjBH,KAAMH,EAAMG,KACZC,MAAOJ,EAAMI,MACbC,SAAUL,EAAMK,YAGlBX,GAEN,IAGyDa,aAAa,MAAKC,SAAA,EACnEX,EAAAA,EAAAA,MAACC,EAAQ,CAAAU,SAAA,CAAE,YAEXC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKlB,EAAS,OAAQ,CACpBmB,SAAU,8BACVC,UAAW,CACTC,MAAO,EACPC,QAAS,iDAEXC,UAAW,CACTF,MAAO,GACPC,QAAS,qEAGX,IACFE,KAAK,OAAOb,KAAK,UAChBR,EAAOQ,OAAQM,EAAAA,EAAAA,KAAA,KAAGQ,MAAO,CAACC,MAAO,OAAOV,SAAEb,EAAOQ,KAAKW,cAEzDjB,EAAAA,EAAAA,MAACC,EAAQ,CAAAU,SAAA,CAAE,SAETC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACIlB,EAAS,QAAS,CACpBmB,SAAU,2BACVI,UAAW,GACXI,QAAS,CACPN,MAAO,qEAEPC,QAAS,+BAGT,IACJE,KAAK,QAAQb,KAAK,WACjBR,EAAOS,QAASK,EAAAA,EAAAA,KAAA,KAAGQ,MAAO,CAACC,MAAO,OAAOV,SAAEb,EAAOS,MAAMU,cAE3DjB,EAAAA,EAAAA,MAACC,EAAQ,CAAAU,SAAA,CAAE,YAETC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACIlB,EAAS,WAAY,CACvBmB,SAAS,8BACTC,UAAW,CACTC,MAAO,EACPC,QAAS,wDAGV,IACHE,KAAK,WAAWb,KAAK,cACpBR,EAAOU,WAAYI,EAAAA,EAAAA,KAAA,KAAGQ,MAAO,CAACC,MAAO,OAAOV,SAAEb,EAAOU,SAASS,cAE3DL,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAAQR,SAAC,kBAIlC,C","sources":["pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n width: 320px;\r\n`\r\nexport const Label = styled.label`\r\n    display: flex;\r\n   flex-direction: column;\r\n    margin-bottom: 16px;\r\n`","// import { useState} from 'react'\r\nimport { useDispatch} from 'react-redux'\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport { registerR } from 'redux/auth/authOperations'\r\nimport * as SC from 'pages/RegisterPage/RegisterPage.styled';\r\n\r\nconst RegisterPage = () => {\r\n  const dispatch = useDispatch()\r\n  const {register, handleSubmit, reset,  formState: { errors }} = useForm()\r\n\r\n  const myHandleSubmit = (event) => {\r\n    // event.preventDefault()\r\n    // const form = event.currentTarget\r\n    // console.log(form.email.value);\r\n    // console.log(form.password.value);\r\n    // console.log(form.name.value);\r\n    \r\n    // dispatch(registerR({\r\n    //   name: form.elements.name.value,\r\n    //   email: form.elements.email.value,\r\n    //   password: form.elements.password.value,\r\n    // }))\r\n    // form.reset()\r\n    console.log(event);\r\n    console.log(event.name);\r\n      console.log(event.email);\r\n      console.log(event.password);\r\n\r\n      dispatch(registerR({\r\n        name: event.name,\r\n        email: event.email,\r\n        password: event.password\r\n      }))\r\n    \r\n      reset()\r\n      \r\n}\r\n    return (\r\n    \r\n        <SC.Form onSubmit={handleSubmit(myHandleSubmit)} autoComplete=\"off\">\r\n        <SC.Label >\r\n        Username\r\n        <input \r\n        {... register('name', {\r\n          required: 'User name is required Field',\r\n          minLength: {\r\n            value: 3,\r\n            message: 'At least length of your name must be 3 symbol'\r\n          },\r\n          maxLength: {\r\n            value: 17,\r\n            message: 'The maximum length of your name must be no more than 17 symbol'\r\n            },\r\n\r\n        })}\r\n        type=\"text\" name=\"name\" />\r\n        {errors.name && <p style={{color: 'red'}}>{errors.name.message}</p>}\r\n      </SC.Label>\r\n      <SC.Label >\r\n        Email\r\n        <input \r\n        {...register('email', { \r\n          required: ' Email is required field', \r\n          maxLength: 28,\r\n          pattern: {\r\n            value: /^([a-z0-9_-]+.)*[a-z0-9_-]+@[a-z0-9_-]+(.[a-z0-9_-]+)*.[a-z]{2,6}$/ ,\r\n            //Это примерное регулярное выражение, ничего догматичного\r\n            message: 'please enter valid email',\r\n           \r\n          }\r\n          })}\r\n        type=\"email\" name=\"email\" />\r\n        {errors.email && <p style={{color: 'red'}}>{errors.email.message}</p>}\r\n      </SC.Label>\r\n      <SC.Label >\r\n        Password\r\n        <input \r\n        {...register('password', { \r\n          required:' Password is required field', \r\n          minLength: {\r\n            value: 7,\r\n            message: 'At least length of your password must be 7 symbol'\r\n          },\r\n                   \r\n         })}\r\n        type=\"password\" name=\"password\" />\r\n        {errors.password && <p style={{color: 'red'}}>{errors.password.message}</p>}\r\n      </SC.Label>\r\n            <button type=\"submit\"> Register  </button>\r\n        </SC.Form>\r\n    \r\n    )\r\n}\r\n\r\nexport default RegisterPage\r\n\r\n\r\n"],"names":["Form","styled","form","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","dispatch","useDispatch","_useForm","useForm","register","handleSubmit","reset","errors","formState","_jsxs","SC","onSubmit","event","console","log","name","email","password","registerR","autoComplete","children","_jsx","_objectSpread","required","minLength","value","message","maxLength","type","style","color","pattern"],"sourceRoot":""}