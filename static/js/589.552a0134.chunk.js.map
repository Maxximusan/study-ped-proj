{"version":3,"file":"static/js/589.552a0134.chunk.js","mappings":"qOAEaA,EAAOC,EAAAA,GAAOC,KAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0BAGlBC,EAAQJ,EAAAA,GAAOK,MAAKC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oF,UCqEjC,EApEkB,WACd,IAAMI,GAAWC,EAAAA,EAAAA,MACjBC,GAAgEC,EAAAA,EAAAA,MAAzDC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAKJ,EAALI,MAAqBC,EAAML,EAAnBM,UAAaD,OA2BpD,OAEIE,EAAAA,EAAAA,MAACC,EAAO,CAACC,SAAUN,GA3BA,SAACO,GAWtBC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAMG,OAClBF,QAAQC,IAAIF,EAAMI,UAGhBhB,GAASiB,EAAAA,EAAAA,IAAM,CACXF,MAAOH,EAAMG,MACbC,SAAUJ,EAAMI,YAGlBV,GAEN,IAIqDY,aAAa,MAAKC,SAAA,EACjEV,EAAAA,EAAAA,MAACC,EAAQ,CAAAS,SAAA,CAAE,SAETC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACIjB,EAAS,QAAS,CACpBkB,SAAU,2BACVC,UAAW,GACXC,QAAS,CACPC,MAAO,qEAEPC,QAAS,+BAGT,IAAEC,KAAK,QAAQC,KAAK,WACvBrB,EAAOQ,QAASK,EAAAA,EAAAA,KAAA,KAAGS,MAAO,CAACC,MAAO,OAAOX,SAAEZ,EAAOQ,MAAMW,cAG3DjB,EAAAA,EAAAA,MAACC,EAAQ,CAAAS,SAAA,CAAE,YAEVC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACIjB,EAAS,WAAY,CACxBkB,SAAS,8BACTS,UAAW,CACTN,MAAO,EACPC,QAAS,wDAGV,IAAEC,KAAK,WAAWC,KAAK,cACxBrB,EAAOS,WAAYI,EAAAA,EAAAA,KAAA,KAAGS,MAAO,CAACC,MAAO,OAAOX,SAAEZ,EAAOS,SAASU,cAG9DN,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAAQR,SAAC,gBAIlC,C","sources":["pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n width: 320px;\r\n`\r\nexport const Label = styled.label`\r\n    display: flex;\r\n   flex-direction: column;\r\n    margin-bottom: 16px;\r\n`\r\n  \r\n","import { useDispatch} from 'react-redux'\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport { login } from 'redux/auth/authOperations'\r\nimport * as SC from 'pages/LoginPage/LoginPage.styled';\r\n\r\nconst LoginPage = () => {\r\n    const dispatch = useDispatch()\r\n    const {register, handleSubmit, reset,  formState: { errors }} = useForm()\r\n\r\n    const myHandleSubmit = (event) => {\r\n         // event.preventDefault()\r\n        // const form = event.currentTarget\r\n        // console.log(form.email.value);\r\n        // console.log(form.password.value);\r\n        \r\n        // dispatch(login({\r\n        //     email: form.elements.email.value,\r\n        //     password: form.elements.password.value,\r\n        //   }))\r\n        // form.reset()\r\n      console.log(event);\r\n      console.log(event.email);\r\n      console.log(event.password);\r\n      \r\n\r\n        dispatch(login({\r\n            email: event.email,\r\n            password: event.password\r\n          }))\r\n        \r\n          reset()\r\n     \r\n    }\r\n    // console.log(errors);\r\n    return (\r\n    \r\n        <SC.Form onSubmit={handleSubmit(myHandleSubmit)} autoComplete=\"off\">\r\n          <SC.Label >\r\n           Email\r\n            <input \r\n            {...register('email', { \r\n              required: ' Email is required field', \r\n              maxLength: 28,\r\n              pattern: {\r\n                value: /^([a-z0-9_-]+.)*[a-z0-9_-]+@[a-z0-9_-]+(.[a-z0-9_-]+)*.[a-z]{2,6}$/ ,\r\n                //Это примерное регулярное выражение, ничего догматичного\r\n                message: 'please enter valid email',\r\n               \r\n              }\r\n              })} type=\"email\" name=\"email\" />\r\n            {errors.email && <p style={{color: 'red'}}>{errors.email.message}</p>}\r\n          </SC.Label>\r\n       \r\n          <SC.Label >\r\n           Password\r\n           <input \r\n           {...register('password', { \r\n            required:' Password is required field', \r\n            minLength: {\r\n              value: 7,\r\n              message: 'At least length of your password must be 7 symbol'\r\n            },\r\n                     \r\n           })} type=\"password\" name=\"password\" />\r\n           {errors.password && <p style={{color: 'red'}}>{errors.password.message}</p>}\r\n          </SC.Label>\r\n         \r\n            <button type=\"submit\"> Log in  </button>\r\n        </SC.Form>\r\n    \r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n\r\n"],"names":["Form","styled","form","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","dispatch","useDispatch","_useForm","useForm","register","handleSubmit","reset","errors","formState","_jsxs","SC","onSubmit","event","console","log","email","password","login","autoComplete","children","_jsx","_objectSpread","required","maxLength","pattern","value","message","type","name","style","color","minLength"],"sourceRoot":""}