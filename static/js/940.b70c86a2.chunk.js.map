{"version":3,"file":"static/js/940.b70c86a2.chunk.js","mappings":"sLAIaA,EAAS,WACpB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,QAAQ,OAAOC,eAAe,SAAQC,UACzCJ,EAAAA,EAAAA,KAACK,EAAAA,GAAa,CACZC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,MACNC,SAAS,KAIjB,C,uDChBO,IAAMC,EAAsB,SAAAC,GACjCA,GAAa,GACb,IAAIC,EAAU,KACdA,EAAUC,YAAW,WACnBF,GAAa,GACbG,aAAaF,EACf,GAAG,IACL,C,oHCLaG,EAAOC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mCACV,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAE,I,UCC3BC,EAAe,SAAHC,GAKlB,IAJLC,EAAGD,EAAHC,IACAC,EAAkBF,EAAlBE,mBACAC,EAAYH,EAAZG,aACAC,EAAWJ,EAAXI,YAEA,OACE7B,EAAAA,EAAAA,KAAA8B,EAAAA,SAAA,CAAA1B,UACEJ,EAAAA,EAAAA,KAACgB,EAAI,CAAAZ,UACH2B,EAAAA,EAAAA,MAAA,OAAA3B,SAAA,EACEJ,EAAAA,EAAAA,KAAA,OACEgC,IAAKN,EACLO,IAAI,aACJxB,MAAM,UAIPmB,EACCC,GACE7B,EAAAA,EAAAA,KAAA,KAAAI,SACGuB,EAAqB,IAAMC,EAAe,IAAMC,KAGnD7B,EAAAA,EAAAA,KAAA,KAAAI,SAAIuB,EAAqB,IAAMC,KAGjC5B,EAAAA,EAAAA,KAAA,KAAAI,SAAIuB,UAMhB,EClCaO,EAAQjB,EAAAA,GAAOkB,GAAEhB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mIACb,SAAAC,GAAC,OAAIA,EAAEC,MAAMc,MAAMC,MAAM,IAC3B,SAAAhB,GAAC,OAAIA,EAAEC,MAAMgB,UAAUC,CAAC,IACpB,SAAAlB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAE,IAC3B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAE,IAEvB,SAAAF,GAAC,OAAIA,EAAEC,MAAMkB,OAAOC,SAAS,IAG3BC,EAAOzB,EAAAA,GAAO0B,GAAEC,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,+ECRhByB,EAAe,WAC1B,IAGIC,EAHaC,OAAOC,QAAQC,cAGFC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,KAAK,KAAKC,MAAM,KAAKC,SAAS,IAYzE,OACEvB,EAAAA,EAAAA,MAAA,WAAA3B,SAAA,EACEJ,EAAAA,EAAAA,KAACkC,EAAK,CAAA9B,SAAC,yBAEPJ,EAAAA,EAAAA,KAAC0C,EAAI,CAAAtC,SACF0C,EAAaI,KACZ,SAAAK,GAAG,MACU,SAAXA,EAAI,KACFvD,EAAAA,EAAAA,KAACwB,EAAY,CAEXE,IAAK6B,EAAI,GACT5B,mBAAoB4B,EAAI,GACxB3B,aAAc2B,EAAI,GAClB1B,YAAa0B,EAAI,IAJZA,EAAI,GAMZ,QAKb,E,mBCjBA,EAjBiB,WACf,IAAAC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAE9C,EAAY8C,EAAA,GAO9B,OAJAG,EAAAA,EAAAA,YAAU,YACRlD,EAAAA,EAAAA,GAAoBC,EACtB,GAAG,KAGDmB,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAA1B,SAAA,CACGwD,IAAa5D,EAAAA,EAAAA,KAACD,EAAAA,EAAM,KACnB6D,IAAa5D,EAAAA,EAAAA,KAAC6C,EAAY,MAIlC,C","sources":["components/Loader/Loader.jsx","helpers/setTimeout.js","components/FavoriteItem/FavoriteItem.styled.jsx","components/FavoriteItem/FavoriteItem.jsx","components/FavoriteList/FavoriteList.styled.jsx","components/FavoriteList/FavoriteList.jsx","pages/Favorite/Favorite.jsx"],"sourcesContent":["import { RotatingLines } from 'react-loader-spinner';\r\n\r\nimport { Box } from 'components/Box';\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"center\">\r\n      <RotatingLines\r\n        strokeColor=\"grey\"\r\n        strokeWidth=\"5\"\r\n        animationDuration=\"0.75\"\r\n        width=\"300\"\r\n        visible={true}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n","export const setTimeOutForLoader = setIsLoading => {\r\n  setIsLoading(true);\r\n  let timerId = null;\r\n  timerId = setTimeout(() => {\r\n    setIsLoading(false);\r\n    clearTimeout(timerId);\r\n  }, 1000);\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Item = styled.li`\r\n  margin-bottom: ${p => p.theme.space[5]}px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { Item } from 'components/FavoriteItem/FavoriteItem.styled';\r\n\r\nexport const FavoriteItem = ({\r\n  img,\r\n  firstBreedNamePart,\r\n  secondBNPart,\r\n  thirdBNPart,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Item>\r\n        <div>\r\n          <img\r\n            src={img}\r\n            alt=\"chosen cat\"\r\n            width=\"800px\"\r\n            // height=\"300px\"\r\n          />\r\n\r\n          {secondBNPart ? (\r\n            thirdBNPart ? (\r\n              <p>\r\n                {firstBreedNamePart + ' ' + secondBNPart + ' ' + thirdBNPart}\r\n              </p>\r\n            ) : (\r\n              <p>{firstBreedNamePart + ' ' + secondBNPart}</p>\r\n            )\r\n          ) : (\r\n            <p>{firstBreedNamePart}</p>\r\n          )}\r\n        </div>\r\n      </Item>\r\n    </>\r\n  );\r\n};\r\n\r\nFavoriteItem.propTypes = {\r\n  img: PropTypes.string.isRequired,\r\n  firstBreedNamePart: PropTypes.string.isRequired,\r\n  secondBNPart: PropTypes.string,\r\n  thirdBNPart: PropTypes.string,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h2`\r\n  font-family: ${p => p.theme.fonts.prefer};\r\n  font-size: ${p => p.theme.fontSizes.m};\r\n  margin-bottom: ${p => p.theme.space[4]}px;\r\n  padding: ${p => p.theme.space[2]}px;\r\n  text-align: center;\r\n  color: ${p => p.theme.colors.darkgreen}\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n","import { FavoriteItem } from 'components/FavoriteItem/FavoriteItem';\r\nimport { List, Title } from 'components/FavoriteList/FavoriteList.styled';\r\n\r\nexport const FavoriteList = () => {\r\n  let dataFromLS = Object.entries(localStorage);\r\n  //   console.log(dataFromLS);\r\n\r\n  let favoriteCats = dataFromLS.map(el => el.join(' ').split(' ').reverse());\r\n  //   console.log(favoriteCats);\r\n\r\n  // This is for test redux-persist\r\n  // const all = useSelector(getAll);\r\n  // console.log(all);\r\n\r\n  // let dataFromLS = Object.values(all);\r\n  // console.log(dataFromLS);\r\n\r\n  // let favoriteCats = dataFromLS.map(el => el.split(' ').reverse());\r\n\r\n  return (\r\n    <section>\r\n      <Title> Your Favorite Cats</Title>\r\n\r\n      <List>\r\n        {favoriteCats.map(\r\n          cat =>\r\n            cat[0] === 'true' && (\r\n              <FavoriteItem\r\n                key={cat[1]}\r\n                img={cat[1]}\r\n                firstBreedNamePart={cat[2]}\r\n                secondBNPart={cat[3]}\r\n                thirdBNPart={cat[4]}\r\n              />\r\n            )\r\n        )}\r\n      </List>\r\n    </section>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { FavoriteList } from 'components/FavoriteList/FavoriteList';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { setTimeOutForLoader } from 'helpers/setTimeout';\r\n\r\nconst Favorite = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n\r\n  useEffect(() => {\r\n    setTimeOutForLoader(setIsLoading);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loader />}\r\n      {!isLoading && <FavoriteList />}\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Favorite;\r\n"],"names":["Loader","_jsx","Box","display","justifyContent","children","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","setTimeOutForLoader","setIsLoading","timerId","setTimeout","clearTimeout","Item","styled","li","_templateObject","_taggedTemplateLiteral","p","theme","space","FavoriteItem","_ref","img","firstBreedNamePart","secondBNPart","thirdBNPart","_Fragment","_jsxs","src","alt","Title","h2","fonts","prefer","fontSizes","m","colors","darkgreen","List","ul","_templateObject2","FavoriteList","favoriteCats","Object","entries","localStorage","map","el","join","split","reverse","cat","_useState","useState","_useState2","_slicedToArray","isLoading","useEffect"],"sourceRoot":""}